/*利用web3部署投票合约*/
//第一步 将候选人转换为16进制
let Web3 = require('web3'); //创建web3实例
web3 = new Web3(new Web3.providers.HttpProvider("HTTP://127.0.0.1:7545")); //web3对象

//16进制转换，因为 Solidity byte 类型为了16进制
// console.log(web3.utils.toHex('sunpu'));
// console.log(web3.utils.toHex('wangting'));
// console.log(web3.utils.toHex('haha'));

//['0x73756e7075','0x77616e6774696e67','0x68616861']

//测试是否为数组列表

// var array = ['0x73756e7075','0x77616e6774696e67','0x68616861'];
// console.log(array[0]);

/*利用ABI合BYTECODE部署合约*/
var fs = require('fs');
// 第二步 获取ABI
var VotingABI = JSON.parse(fs.readFileSync('public/Voting.abi').toString());
var VotingContract = new web3.eth.Contract(VotingABI);
// 第三步获取bytecode
var data ="0x608060405234801561001057600080fd5b50604051610412380380610412833981018060405281019080805182019291905050508060019080519060200190610049929190610050565b50506100c8565b828054828255906000526020600020908101928215610092579160200282015b82811115610091578251829060001916905591602001919060010190610070565b5b50905061009f91906100a3565b5090565b6100c591905b808211156100c15760008160009055506001016100a9565b5090565b90565b61033b806100d76000396000f30060806040526004361061006d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680632f265cf714610072578063392e6678146100bd5780637021939f14610106578063b13c744b14610151578063cc9ab2671461019a575b600080fd5b34801561007e57600080fd5b506100a160048036038101908080356000191690602001909291905050506101cb565b604051808260ff1660ff16815260200191505060405180910390f35b3480156100c957600080fd5b506100ec6004803603810190808035600019169060200190929190505050610210565b604051808215151515815260200191505060405180910390f35b34801561011257600080fd5b50610135600480360381019080803560001916906020019092919050505061026f565b604051808260ff1660ff16815260200191505060405180910390f35b34801561015d57600080fd5b5061017c6004803603810190808035906020019092919050505061028f565b60405180826000191660001916815260200191505060405180910390f35b3480156101a657600080fd5b506101c960048036038101908080356000191690602001909291905050506102b2565b005b60006101d682610210565b15156101e157600080fd5b600080836000191660001916815260200190815260200160002060009054906101000a900460ff169050919050565b600080600090505b60018054905081101561026457826000191660018281548110151561023957fe5b90600052602060002001546000191614156102575760019150610269565b8080600101915050610218565b600091505b50919050565b60006020528060005260406000206000915054906101000a900460ff1681565b60018181548110151561029e57fe5b906000526020600020016000915090505481565b6102bb81610210565b15156102c657600080fd5b6001600080836000191660001916815260200190815260200160002060008282829054906101000a900460ff160192506101000a81548160ff021916908360ff160217905550505600a165627a7a7230582092ae3f7dc1c06a40e4eaaad91d4a3a1afbd4590bba2672e19241a1fe0e7037d80029";
// 第四步传参
var candidateNames = ['0x73756e7075','0x77616e6774696e67','0x68616861'];
// 第五步部署
VotingContract.deploy({
    data: data,
    arguments: [candidateNames]}).
    send({
        from:'0x2fc35b9fD883905828fB27528cD0edF576f32EF3',
        gas: 1500000,
        gasprice: '1000000'
    },function(error,result){console.log(result)})